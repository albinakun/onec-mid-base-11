
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// {{Кун А.В.: Вывод поля КонтактноеЛицо под полем Договор
	ЭлементКонтактноеЛицо = Элементы.Добавить("КонтактноеЛицо", Тип("ПолеФормы"), Элементы.ГруппаШапкаПраво);
	ЭлементКонтактноеЛицо.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементКонтактноеЛицо.ПутьКДанным = "Объект.КонтактноеЛицо";
	ЭлементКонтактноеЛицо.Заголовок = "Контактное лицо";
	
	// Создание группы для размещения поля СогласованнаяСкидка и кнопки ПересчитатьТаблицу
	ЭлементГруппаСкидка = Элементы.Добавить("ГруппаСкидка", Тип("ГруппаФормы"), Элементы.ГруппаШапкаЛево);
	ЭлементГруппаСкидка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ЭлементГруппаСкидка.ОтображатьЗаголовок = Ложь;
	
	// Создание поля СогласованнаяСкидка
	ЭлементСогласованнаяСкидка = Элементы.Добавить("СогласованнаяСкидка", Тип("ПолеФормы"), Элементы.ГруппаСкидка);
	ЭлементСогласованнаяСкидка.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементСогласованнаяСкидка.ПутьКДанным = "Объект.СогласованнаяСкидка";
	ЭлементСогласованнаяСкидка.Заголовок = "Согласованная скидка";
	ЭлементСогласованнаяСкидка.УстановитьДействие("ПриИзменении", "СогласованнаяСкидкаПриИзменении");
	
	//Создание кнопки ПересчитатьТаблицу
	Если Элементы.Найти("КнопкаПересчитатьТаблицу") = Неопределено Тогда
		КомандаПересчитатьСумму = Команды.Добавить("ПересчитатьТаблицу");
		КомандаПересчитатьСумму.Заголовок = "Пересчитать таблицу";
		КомандаПересчитатьСумму.Действие = "КомандаПересчитатьТаблицу";
		
		КнопкаКоманды = Элементы.Добавить("КнопкаПересчитатьТаблицу", Тип("КнопкаФормы"), Элементы.ГруппаСкидка);
		КнопкаКоманды.ИмяКоманды = "ПересчитатьТаблицу";
		КнопкаКоманды.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КонецЕсли;
	// }}
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// {{Кун А.В.: Расчет СуммыСтроки с учетом СогласованнойСкидки
	// КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	// ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;

	ПересчитатьСуммуСтрокиСУчетомСкидок(ТекущиеДанные);	
	
	// }}
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Асинх Процедура СогласованнаяСкидкаПриИзменении()
	
	// {{Кун А.В.: Задает вопрос о пересчете таблицы в случае изменения поля СогласованнаяСкидка
	ТекущиеДанныеТовары = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанныеУслуги = Элементы.Услуги.ТекущиеДанные;
	
	Если ТекущиеДанныеТовары <> Неопределено Или ТекущиеДанныеУслуги <> Неопределено Тогда
		РезультатВопроса = Ждать ВопросАсинх("Изменен процент скидки. Пересчитать таблицу товаров и услуг?", РежимДиалогаВопрос.ДаНет);
		Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
			ЗапроситьДанныеТабличнойЧасти();
		КонецЕсли;
	КонецЕсли;
	РассчитатьСуммуДокумента();
	// }}
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПересчитатьТаблицу(Команда)
	
	// {{Кун А.В.: Запускается при нажатии кноки ПересчитатьТаблицу
	ЗапроситьДанныеТабличнойЧасти();
	РассчитатьСуммуДокумента();
	// }}
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗапроситьДанныеТабличнойЧасти()
	
	// {{Кун А.В.: Табличная часть Товаров
	ТЧДокументаТовары = Объект.Товары;
	Для Каждого Строка Из ТЧДокументаТовары Цикл
        ПересчитатьСуммуСтрокиСУчетомСкидок(Строка);
	КонецЦикла;
	
	// Табличная часть Услуг
	ТЧДокументаУслуги = Объект.Услуги;
	Для Каждого Строка Из ТЧДокументаУслуги Цикл
        ПересчитатьСуммуСтрокиСУчетомСкидок(Строка);
    КонецЦикла;
	// }}
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммуСтрокиСУчетомСкидок(Строка)
	
	// {{Кун А.В.: Проверка общей скидки и пересчет суммы
	СуммарнаяСкидка = Объект.СогласованнаяСкидка + Строка.Скидка;
	Если СуммарнаяСкидка > 100 Тогда
		Строка.Сумма = 0;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрШаблон("Суммарная скидка строки: %1. %2 = %3. Внесите исправления, общая скидка не должна превышать 100", Строка.НомерСтроки, Строка.Номенклатура, СуммарнаяСкидка);
		Сообщение.Сообщить();
	Иначе
		КоэффициентСкидки = 1 - (Строка.Скидка + Объект.СогласованнаяСкидка) / 100;
		Строка.Сумма = Строка.Цена * Строка.Количество * КоэффициентСкидки;		
	КонецЕсли;
	// }}

КонецПроцедуры

#КонецОбласти

#КонецОбласти
